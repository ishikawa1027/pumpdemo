############################################################
#                                                          #
#   JSLint (JavaScript静的検査ツール) オプション設定一覧   #
#                                                          #
############################################################

# ADsafe のルールを適用するか
# ・Webページに埋め込んだJavaScriptで書かれた広告やウィジェットなどが不正な動作を
#   しないようにADsafe.orgが決めたルール
#   ・グローバル変数・関数へのアクセスはArray, Boolean, Number, String, Mathに限定される
#   ・this禁止
#   ・arguments禁止
#   ・eval禁止
#   ・with禁止
#   ・callee, caller, constructor, prototype, stack, unwatch, valueOf, watch禁止
#   ・名前の先頭または最後尾に'_'禁止
#   ・括弧記法によるプロパティアクセス禁止
#   ・DateとMath.random禁止
# ADsafe  :  http://www.adsafe.org/
adsafe = false

# ビット演算子を使用してもよいか
 bitwise = false

# documentやwindow等、標準ブラウザのグローバル変数が事前に定義されているか
browser = true

# HTMLタグが大文字で書かれているか
 cap = false

# ある変数の型が途中で変わってもいいか
 confusion = false

# continueを使用してもよいか
 'continue' = false

# CSSの1行目に @charset 'UTF-8' が無くてもよいか
 css = false

# debuggerキーワードを使用してもよいか
 debug = false

# alert, confirm, console, Debug, opera, promptを使用してもよいか
 devel = false

# 抽象比較( == または != )を使用してもよいか
 eqeq = false

# ES5の文法を使用してもよいか
 es5 = false

# eval関数を使用してもよいか
 evil = false

# for-in文中にフィルタが無くてもよいか
 forin = false

# HTMLでフラグメント識別子の使用してもよいか
 fragment = false

# コンストラクタ名の最初の文字は小文字でよいか
# (注意)JSLINTは、コンストラクタの定義の所で名前のチェックをしていない。
# newでコンストラクタを呼ぶ所で名前をチェックしているので、小文字だった場合は
# その行を指摘される。
 newcap = false

# Node.jsのグローバル変数・関数があらかじめ定義されていると仮定するか
# Node.jsのグローバル変数・関数は以下の通り
#     Buffer, clearInterval, clearTimeout, console, global, module, process,
#     querystring, require, setInterval, setTimeout, util, __filename, __dirname
 node = false

# 名前の先頭または末尾にアンダーバーがあってもいいか
 nomen = false

# HTMLでイベントハンドラーの登録をしてもよいか
# on = false

# 1個目のエラーでJSLINTを止めるか
passfail = false

# インクリメント・デクリメントを使用してもよいか
 plusplus = false

# /*properties*/コメントを利用して全プロパティのスペルミスをチェックするか
# JSLINTではjsファイル内に以下のようにコメントすると、プロパティにアクセスしている箇所で
# スペルミスをしていないかチェックしてくれる
# 例：aaa と bbb のプロパティのスペルミスをチェックしたい場合
#     /*properties
#         aaa
#         bbb
#      */
 properties = false

# 正規表現に . (任意の1文字)と [^...] (指定した文字以外)を使用してもよいか
 regexp = true

# Rhino環境で提供されているグローバル変数・関数があらかじめ定義されていると仮定するか
# Rhino環境のグローバル変数・関数は以下の通り
#     defineClass, deserialize, gc, help, load, loadClass, print, quit, readFile,
#     readUrl, runCommand, seal, serialize, spawn, sync, toint32, version
 rhino = false

# 変数または関数が使用する箇所よりも前に宣言されていなくてよいか
 undef = false

# 未使用の変数があってもよいか
 unparam = false

# ADsafeルールのうち、ウィジェット向けのルール以外を有効にするか
 safe = false

# 'use strict' が無くてもよいか
 sloppy = false

# オブジェクトのプロパティへのアクセスは、ドットではなくて括弧記法でもよいか
# ドット演算子(dot notation): sample.aaa
# 括弧記法(subscript notation): sample['aaa']
 sub = false

# 1つのfunction内にvarステートメントが2つ以上あってもよいか
 vars = false

# スペースがいい加減に入っていてもよいか(インデントが揃っていなくてもよいか)
 white = false

# Yahoo Widget環境で提供されているグローバル変数・関数があらかじめ定義されていると仮定するか
# Yahoo Widget環境のグローバル変数・関数は以下の通り
#     alert, animator, appleScript, beep, bytesToUIString, Canvas, chooseColor,
#     chooseFile, chooseFolder, closeWidget, COM, convertPathToHFS, convertPathToPlatform,
#     CustomAnimation, escape, FadeAnimation, filesystem, Flash, focusWidget, form,
#     FormField, Frame, HotKey, Image, include, isApplicationRunning, iTunes,
#     konfabulatorVersion, log, md5, MenuItem, MoveAnimation, openURL, play, Point,
#     popupMenu, preferenceGroups, preferences, print, prompt, random, Rectangle, 
#     reloadWidget, ResizeAnimation, resolvePath, resumeUpdates, RotateAnimation, 
#     runCommand, runCommandInBg, saveAs, savePreferences, screen, ScrollBar,
#     showWidgetPreferences, sleep, speak, Style, suppressUpdates, system, tellWidget,
#     Text, TextArea, Timer, unescape, updateNow, URL, Web, widget, Window, XMLDOM,
#     XMLHttpRequest, yahooCheckLogin, yahooLogin, yahooLogout
 widget = false

# Windows固有のグローバル変数・関数があらかじめ定義されていると仮定するか
# Windows固有のグローバル変数・関数は以下の通り
#     ActiveXObject, CScript, Debug, Enumerator, System, VBArray, WScript
 windows = false

# インデント幅が指定した幅になっているか(0の場合はチェックを行わない)
indent = 4

# 許容するエラーの最大数(指定なし：50個)
maxerr = 1000000

# 許容するソースコード行数(指定なし：全行)
maxlen = 10000000